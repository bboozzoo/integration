version: '2'
services:


    #
    # mender-deployments
    #
    mender-deployments:
        image: mendersoftware/deployments:latest
        extends:
            file: common.yml
            service: mender-base
        networks:
            - mender
        # Application requires S3 access.
        # For convinience access can be configured here to overide config file.
        # Keys have to grant access to default bucket: mender-artifact-storage
        # Otherwise provide config file though volume.
        #
        #
        # You can use an additional compose file where the following environment
        # keys are provided:
        #
        # environment:
        #      AWS_ACCESS_KEY_ID: minio
        #      AWS_SECRET_ACCESS_KEY: minio123
        #      AWS_URI: http://s3.docker.mender.io:9000
        depends_on:
            - mongo-common

    #
    # mender-etcd
    #
    mender-etcd:
        image: microbox/etcd:latest
        #volumes:
        #    - /var/etcd/:/data
        #override command since the image entrypoint requires
        #these two args
        command:
            - -data-dir=/data
            - -name=mender-etcd
        networks:
            mender:
                aliases:
                    - etcd

    #
    # mender-gui
    #
    mender-gui:
        image: mendersoftware/gui:latest
        networks:
            - mender

    #
    # mender-api-gateway
    #
    mender-api-gateway:
        image: mendersoftware/api-gateway:latest
        ports:
            - "8080:443"
        networks:
            mender:
                aliases:
                    - gateway
                    - docker.mender.io

        # nginx doesn't know the actual outside port
        # could be solved with introspection (mapping daemon socket + 'docker ps')
        # the easier way is an env var
        environment:
            MAPPED_PORT: 8080
        # critical - otherwise nginx may not detect
        # these servers and exits with 'upstream server not found'
        depends_on:
            - mender-device-auth
            - mender-device-adm
            - mender-deployments
            - mender-gui
            - mender-useradm
            - mender-inventory

    #
    # mender-device-auth
    #
    mender-device-auth:
        image: mendersoftware/deviceauth:latest
        extends:
            file: common.yml
            service: mender-base
        networks:
            - mender
        depends_on:
            - mongo-common

    #
    # mender-device-adm
    #
    mender-device-adm:
        image: mendersoftware/deviceadm:latest
        extends:
            file: common.yml
            service: mender-base
        networks:
            - mender
        depends_on:
            - mongo-common

    #
    # mender-inventory
    #
    mender-inventory:
        image: mendersoftware/inventory:latest
        extends:
            file: common.yml
            service: mender-base
        networks:
            - mender
        depends_on:
            - mongo-common

    #
    # mender-useradm
    #
    mender-useradm:
        image: mendersoftware/useradm:latest
        extends:
            file: common.yml
            service: mender-base
        networks:
            - mender
        depends_on:
            - mongo-common

    #
    # single mongo instance for all services, extend as required
    # during deployment
    #
    mongo-common:
        image: mongo:latest
        networks:
            mender:
                aliases:
                    - mongo-deployments
                    - mongo-device-adm
                    - mongo-device-auth
                    - mongo-inventory
                    - mongo-useradm
                    - mender-mongo-deployments
                    - mender-mongo-device-adm
                    - mender-mongo-device-auth
                    - mender-mongo-inventory
                    - mender-mongo-useradm

networks:
    mender:
